{"version":3,"sources":["webpack:///./src/templates/search.js"],"names":["SearchTemplate","props","defaultSearchQuery","sanitizeSearchTerm","metaRobots","push","heading","crumbs","crumb","path","isCurrent","text","to","aria-label","searchQuery"],"mappings":"4FAAA,oEA6CeA,UAtCQ,SAACC,GAGvB,IAAIC,EAAqBD,EAAM,KAC3BC,IACHA,EAAqBC,YAAmBD,IAIzC,IAAME,EAAa,GACO,IAAtBF,IACHE,EAAWC,KAAK,YAChBD,EAAWC,KAAK,YAajB,OACC,kBAAC,IAAD,CAAQC,QAAQ,SAASC,OAXX,CACdC,MAAO,CACNC,KAAM,WACNC,WAAW,EACXC,KAAM,WAOkCF,KAAMR,EAAMQ,KAAML,WAAYA,GACtE,gFAAiE,kBAAC,OAAD,CAAMQ,GAAG,iBAAiBC,aAAW,8BAArC,eAAjE,KACA,kBAAC,IAAD,CAAcC,YAAaZ","file":"component---src-templates-search-js-929c9a6a645c1fb22e7a.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport { SearchLayout, sanitizeSearchTerm } from \"../components/search\"\n\nconst SearchTemplate = (props) => {\n\n\t// Pull wildcard from search URL as default search term.\n\tlet defaultSearchQuery = props[\"*\"]\n\tif (defaultSearchQuery) {\n\t\tdefaultSearchQuery = sanitizeSearchTerm(defaultSearchQuery)\n\t}\n\n\t// Don't index or follow if there's a search term.\n\tconst metaRobots = []\n\tif (defaultSearchQuery != \"\") {\n\t\tmetaRobots.push(\"nofollow\")\n\t\tmetaRobots.push(\"noindex\")\n\t}\n\n\tconst crumbs = {\n\t\tcrumb: {\n\t\t\tpath: \"/search/\",\n\t\t\tisCurrent: true,\n\t\t\ttext: \"Search\"\n\t\t}\n\t}\n\n\t// @TODO add meta description?\n\n\treturn (\n\t\t<Layout heading=\"Search\" crumbs={crumbs} path={props.path} metaRobots={metaRobots}>\n\t\t\t<p>If you can&lsquo;t find what you&lsquo;re looking for, please <Link to=\"/about/contact\" aria-label=\"Contact us and let us know\">let us know</Link>.</p>\n\t\t\t<SearchLayout searchQuery={defaultSearchQuery} />\n\t\t</Layout>\n\t)\n}\n\nSearchTemplate.propTypes = {\n\t\"*\": PropTypes.string,\n\tpath: PropTypes.string.isRequired\n}\n\nexport default SearchTemplate"],"sourceRoot":""}