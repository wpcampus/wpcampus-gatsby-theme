{"componentChunkName":"component---src-templates-post-js","path":"/blog/2017/06/vulnerable-wordpress-plugins-6-16-2017/","result":{"data":{"wordpressPost":{"id":"6873bc0c-f6a1-58d2-b983-7408f4bdfd21","wordpress_id":12774,"slug":"vulnerable-wordpress-plugins-6-16-2017","path":"/blog/2017/06/vulnerable-wordpress-plugins-6-16-2017/","author":[{"id":"5be72c28-6949-53f8-b212-3feb5a9983de","path":"gilzow","display_name":"Paul Gilzow","email":"gilzowp@missouri.edu","twitter":"gilzow","website":"http://missouri.edu/","company":"University of Missouri","company_position":"Programmer Analyst","bio":"Web application security and accessibility evangelist. Software instructor. Conference lecturer and presenter."}],"title":"Vulnerable WordPress Plugins Report for the Week of June 16, 2017","type":"post","status":"publish","date":"2017-06-16T19:04:26.000Z","dateFormatted":"June 16, 2017","excerpt":"<p>Introduction The weekly list is a collection of plugins and/or themes that have had vulnerabilities disclosed within the last week. I've historically created these weekly vulnerable plugin reports for the WordPress...</p>\n","content":"<h2>Introduction</h2>\n<p>The weekly list is a collection of plugins and/or themes that have had vulnerabilities disclosed within the last week. I&#8217;ve historically created these weekly vulnerable plugin reports for the WordPress admins at the University of Missouri campus as a way to help them identify plugins and themes that need to be updated quickly. I began sharing the list publicly last fall.  As more and more institutions began asking me to add them to my list, we felt it would be a good idea to share this resource here on WPCampus.</p>\n<p><a class=\"button expand\" href=\"https://docs.google.com/spreadsheets/d/1gTLMGIBbVQfWWuHnsrSev7Nd67nkU1NKs2ie3NM7dgg/edit?usp=sharing\">View this week&#8217;s list of vulnerable plugins</a></p>\n<h2>Vulnerable Plugins</h2>\n<p>There are nine unfixed vulnerabilities across five plugins this week.  The vast majority of this week&#8217;s unfixed vulnerabilities all come from a single author.  Unfortunately, he reused the same chunk of vulnerable code across all of his plugins.  Specifically, when processing POST data, he did not include a nonce, or other check, to ensure that the user intended to initiate the save action, leaving his code open to a <a href=\"https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\">Cross-Site Request Forgery</a> vulnerability.  In addition, there is no validation, filtering or sanitation performed on the data before he saves the information to the database. He then later echoes that data back out to the browser without any escaping, leaving the code, and more importantly the user, open to <a href=\"https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\">Cross-Site Scripting</a> vulnerabilities.  An attacker could therefore combine these two vulnerabilities to steal an Admin&#8217;s session IDs on a target WordPress site.</p>\n<h2>Other News</h2>\n<p><a href=\"https://www.blackarch.org/\">BlackArch</a> released the <a href=\"https://www.blackarch.org/downloads.html\">latest version</a> of their PentTesting toolkit yesterday.  It now contains over <a href=\"https://www.blackarch.org/tools.html\">1800 tools</a> of which are several WordPress-specific tools, including one that I&#8217;ve been playing with  recently, <a href=\"https://github.com/m4ll0k/WPSeku\">WPSeku</a>.  As a general WordPress scanning tool, I still find <a href=\"https://wpscan.org/\">WPScan</a> to contain more immediately-usable information, but WPSeku allows you to define a target file and a collection of parameters that you can then have it <a href=\"https://www.owasp.org/index.php/Fuzzing\">fuzz</a> against for <a href=\"https://www.owasp.org/index.php/SQL_Injection\">SQL Injection</a>, Cross-Site Scripting and Local File Inclusion vulnerabilities.  From a development standpoint, I&#8217;ve been using it to test against my own themes/plugins as a tertiary way to make sure I haven&#8217;t overlooked or missed something.  Install it locally, or grab the <a href=\"http://www.mirrorservice.org/sites/blackarch.org/blackarch/ova/blackarch-linux-2016.12.24-x86_64.ova\">OVA virtual machine image</a> of BlackArch and start testing against your local development instance of your sites and see what you discover.</p>\n","comment_status":"open","categories":[{"id":"9321c84b-1d3a-5fe6-8ea5-e74a5f409aad","wordpress_id":58,"count":109,"name":"Plugins","description":"","slug":"plugins"},{"id":"2b3b6db2-5475-53a0-af10-92a53817aa73","wordpress_id":59,"count":114,"name":"Security","description":"","slug":"security"}],"wpc_seo":{"title":"","meta":{"description":"Introduction The weekly list is a collection of plugins and/or themes that have had vulnerabilities disclosed within the last week. I&#8217;ve historically created these weekly vulnerable plugin reports for the WordPress...","robots":[]}}},"site":{"siteMetadata":{"siteName":"WPCampus: Where WordPress meets higher education"}}},"pageContext":{"id":"6873bc0c-f6a1-58d2-b983-7408f4bdfd21","wpc_protected":null,"next":null,"previous":{"id":"cf194985-16da-514b-9fbf-7701122324eb","wordpress_id":12921,"slug":"vulnerable-wordpress-plugins-6-23-2017","path":"/blog/2017/06/vulnerable-wordpress-plugins-6-23-2017/","title":"Vulnerable WordPress Plugins Report for the Week of June 23, 2017","date":"2017-06-23T21:48:48.000Z","wpc_protected":null},"crumbs":{"crumb":{"path":"/blog/2017/06/vulnerable-wordpress-plugins-6-16-2017/","text":"Vulnerable WordPress Plugins Report for the Week of June 16, 2017"},"parent_element":{"crumb":{"path":"/blog/","text":"Community Blog"}}}}},"staticQueryHashes":["2186475492"]}