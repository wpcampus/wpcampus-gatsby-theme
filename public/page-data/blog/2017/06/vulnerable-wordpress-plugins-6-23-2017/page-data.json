{"componentChunkName":"component---src-templates-post-js","path":"/blog/2017/06/vulnerable-wordpress-plugins-6-23-2017/","result":{"data":{"wordpressPost":{"id":"cf194985-16da-514b-9fbf-7701122324eb","wordpress_id":12921,"slug":"vulnerable-wordpress-plugins-6-23-2017","path":"/blog/2017/06/vulnerable-wordpress-plugins-6-23-2017/","author":[{"id":"5be72c28-6949-53f8-b212-3feb5a9983de","path":"gilzow","display_name":"Paul Gilzow","email":"gilzowp@missouri.edu","twitter":"gilzow","website":"http://missouri.edu/","company":"University of Missouri","company_position":"Programmer Analyst","bio":"Web application security and accessibility evangelist. Software instructor. Conference lecturer and presenter."}],"title":"Vulnerable WordPress Plugins Report for the Week of June 23, 2017","type":"post","status":"publish","date":"2017-06-23T21:48:48.000Z","dateFormatted":"June 23, 2017","excerpt":"<p>Vulnerable Plugins This week's list is probably one of the shortest since I started doing these reports: only 6 plugins, with 3 having unfixed vulnerabilities.  Unfortunately, one of them is...</p>\n","content":"<h2>Vulnerable Plugins</h2>\n<p>This week&#8217;s list is probably one of the shortest since I started doing these reports: only 6 plugins, with 3 having unfixed vulnerabilities.  Unfortunately, one of them is a repeat offender: Photo Gallery by WD, which made an appearance in the May 5, 2017 report for a SQL Injection vulnerability.  This time around, it&#8217;s an authenticated path traversal issue.  Now, if you&#8217;re wondering why an Authenticated Path Traversal vulnerability is an issue (they have to be an authenticated administrator, can&#8217;t they do most anything anyway?), it isn&#8217;t a vulnerability against WordPress but against the things outside of WordPress. In this case, it gives the user the ability to potentially read any file the (web host) site user account has access to.  This could be other files stored in the host account outside of the WordPress installation, other accounts files (if the host hasn&#8217;t isolated accounts from each other properly), all the way to the system passwd file.</p>\n<p><a class=\"button expand\" href=\"https://docs.google.com/spreadsheets/d/1dZhEAHmIe9FzbcNiDZy2UCTMuhFfT04KopC8dJGiIlM/edit?usp=sharing\">View this week&#8217;s vulnerable plugins list</a></p>\n<h2>Other Security News</h2>\n<p><a href=\"https://apache.org/\">Apache</a> released version 2.4.26 of the <a href=\"https://httpd.apache.org/\">Apache Web Server</a> earlier this week which addressed several critical vulnerabilities: <a href=\"https://lists.apache.org/thread.html/f4515e580dfb6eeca589a5cdebd4c4c709ce632b12924f343c3b7751@%3Cdev.httpd.apache.org%3E\">mod_mime buffer overread</a>, <a href=\"https://lists.apache.org/thread.html/55a068b6a5eec0b3198ae7d96a7cb412352d0ffa7716612c5af3745b@%3Cdev.httpd.apache.org%3E\">ap_find_token buffer overread</a>, and <a href=\"https://lists.apache.org/thread.html/8409e41a8f7dd9ded37141c38df001be930115428c3d64f70bbdb8b4@%3Cdev.httpd.apache.org%3E\">ap_get_basic_auth_pw authentication bypass</a> and <a href=\"https://lists.apache.org/thread.html/84bf7fcc5cad35d355f11839cbdd13cbc5ffc1d34675090bff0f96ae@%3Cdev.httpd.apache.org%3E\">mod_ssl null pointer dereference</a>. Users of 2.4.X are strongly encouraged to upgrade to 2.4.6.  These vulnerabilities also affect the 2.2.X branch and are encouraged to either apply patches to address each vulnerability, or upgrade to 2.2.33 as soon as it is released.</p>\n<p><a href=\"https://securityweekly.com/2017/06/20/tsw6/\">Episode number six</a> of <a href=\"https://securityweekly.com/category/tsw/\">Tradecraft Security Weekly</a> covers finding and exploiting vulnerabilities in a WordPress site using <a href=\"https://wpscan.org/\">WPScan</a> and <a href=\"https://www.metasploit.com/\">Metasploit</a> (both of which are included in <a href=\"https://www.blackarch.org/\">BlackArch</a> which I discussed <a href=\"https://dev5290.wpcampus.org/2017/06/vulnerable-wordpress-plugins-6-16-2017/\">last week</a>). It&#8217;s definitely worth a watch/listen if you are interested in WordPress security.</p>\n<p>For our Drupal friends, Drupal <a href=\"https://www.drupal.org/SA-CORE-2017-003\">released an update </a>for both the 7.X and 8.X branches that addresses one critical vulnerability (remote code execution), one moderately critical vulnerability (access bypass for uploaded files) and one less critical vulnerability. Administrators are encouraged to update as soon as possible.</p>\n<p>Last, I&#8217;m excited to see that <a href=\"https://www.wordfence.com/\">Wordfence</a> has <a href=\"https://www.wordfence.com/blog/2017/06/abandoned-removed-plugin-alerts/\">added</a> a Removed Plugin alert to their security plugin (though they are <a href=\"https://wordpress.org/plugins/no-longer-in-directory/\">not the first</a> to offer this service). I have always been of the opinion that WordPress should notify you when you are using a plugin that is no longer available in the public repository (though the WordPress core team <a href=\"https://wordpress.org/ideas/topic/alert-when-installed-plugins-have-been-removed-from-the-plugin-directory/page/2#post-30439\">disagrees</a>).  Currently, if you are using a plugin in your site that has been removed from the public repository, for any reason, as the site owner you do not receive a notification of any kind. This means you could be running a plugin that has an actively exploited vulnerability, or a plugin that has been abandoned.  As an administrator you <strong>need</strong> to know when a plugin&#8217;s status has changed so you can make an informed decision about what to do.  It&#8217;s one of the main reasons why I started the vulnerable plugins report to begin with: so site owners have <em>some</em> indication of when a plugin they are using has an issue.  Given Wordfence&#8217;s install base, I applaud Wordfence for including this information in the free version of their plugin to get this vital information out to as many people as possible.</p>\n","comment_status":"open","categories":[{"id":"9321c84b-1d3a-5fe6-8ea5-e74a5f409aad","wordpress_id":58,"count":109,"name":"Plugins","description":"","slug":"plugins"},{"id":"2b3b6db2-5475-53a0-af10-92a53817aa73","wordpress_id":59,"count":114,"name":"Security","description":"","slug":"security"}],"wpc_seo":{"title":"","meta":{"description":"Vulnerable Plugins This week&#8217;s list is probably one of the shortest since I started doing these reports: only 6 plugins, with 3 having unfixed vulnerabilities.  Unfortunately, one of them is...","robots":[]}}},"site":{"siteMetadata":{"siteName":"WPCampus: Where WordPress meets higher education"}}},"pageContext":{"id":"cf194985-16da-514b-9fbf-7701122324eb","wpc_protected":null,"next":{"id":"6873bc0c-f6a1-58d2-b983-7408f4bdfd21","wordpress_id":12774,"slug":"vulnerable-wordpress-plugins-6-16-2017","path":"/blog/2017/06/vulnerable-wordpress-plugins-6-16-2017/","title":"Vulnerable WordPress Plugins Report for the Week of June 16, 2017","date":"2017-06-16T19:04:26.000Z","wpc_protected":null},"previous":{"id":"2c93b959-6d6f-5ceb-8206-726db1978073","wordpress_id":13144,"slug":"vulnerable-wordpress-plugins-report-week-june-30-2017","path":"/blog/2017/06/vulnerable-wordpress-plugins-report-week-june-30-2017/","title":"Vulnerable WordPress Plugins Report for the Week of June 30, 2017","date":"2017-06-30T20:47:43.000Z","wpc_protected":null},"crumbs":{"crumb":{"path":"/blog/2017/06/vulnerable-wordpress-plugins-6-23-2017/","text":"Vulnerable WordPress Plugins Report for the Week of June 23, 2017"},"parent_element":{"crumb":{"path":"/blog/","text":"Community Blog"}}}}},"staticQueryHashes":["2186475492"]}