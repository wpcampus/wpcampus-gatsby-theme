{"componentChunkName":"component---src-templates-post-js","path":"/blog/2017/07/vulnerable-wordpress-plugins-report-july-28-2017/","result":{"data":{"wordpressPost":{"id":"a78dc40f-e485-545e-9494-551b0addc598","wordpress_id":13687,"slug":"vulnerable-wordpress-plugins-report-july-28-2017","path":"/blog/2017/07/vulnerable-wordpress-plugins-report-july-28-2017/","author":[{"id":"5be72c28-6949-53f8-b212-3feb5a9983de","path":"gilzow","display_name":"Paul Gilzow","email":"gilzowp@missouri.edu","twitter":"gilzow","website":"http://missouri.edu/","company":"University of Missouri","company_position":"Programmer Analyst","bio":"Web application security and accessibility evangelist. Software instructor. Conference lecturer and presenter."}],"title":"Vulnerable WordPress Plugins Report for the Week of July 28, 2017","type":"post","status":"publish","date":"2017-07-28T20:59:21.000Z","dateFormatted":"July 28, 2017","excerpt":"<p>Vulnerable Plugins It was a busy week while I was away.  Twenty disclosures, with eleven issues unfixed.  In concerns to both Formcraft Form Builder, and Ultimate Affiliate Pro, since they...</p>\n","content":"<h2>Vulnerable Plugins</h2>\n<p>It was a busy week while I was away.  Twenty disclosures, with eleven issues unfixed.  In concerns to both <a href=\"http://formcraft-wp.com/\">Formcraft Form Builder</a>, and <a href=\"http://affiliate.wpindeed.com/\">Ultimate Affiliate Pro</a>, since they are paid plugins, I do not have access to the source code in order to verify the disclosures.  In addition, I&#8217;m assuming the vulnerabilities still remain since the last versions publicly listed match the vulnerable versions indicated in the <a href=\"https://packetstormsecurity.com/\">PacketStorm</a> posts.</p>\n<p>The other vulnerability I want to highlight is the Arbitrary File Upload vulnerability in the <a href=\"https://wordpress.org/plugins/woocommerce-catalog-enquiry/\">WooCommerce Catalog Enquiry</a> plugin.  This vulnerability was initially disclosed back in <a href=\"https://docs.google.com/spreadsheets/d/12x2KvhWUweQCyMfEaqS0B3NIWo07DEMa6gZoTnRfiOI/edit?usp=sharing\">April</a>. At the time, the plugin was removed from the public repository. The author has since released a fix, but the fix doesn&#8217;t entirely resolve the issue.  Unfortunately, they are relying on the reported file type ($_FILES[&#8216;fileupload&#8217;][&#8216;type&#8217;]) but this value isn&#8217;t reliable as it is set by the browser and can therefore be altered.  To the author&#8217;s credit, they are now adding <a href=\"http://php.net/manual/en/function.mt-rand.php\">mt_rand</a> to the file name and are now storing it in the <a href=\"http://php.net/manual/en/function.sys-get-temp-dir.php\">system temp directory</a>.  This does makes the uploaded file less accessible but unfortunately doesn&#8217;t truly restrict the file types being uploaded.  This vulnerability could be combined with a Local File Inclusion vulnerability to regain access to the uploaded files.  In addition, it appears that the script allows unauthorized users to generate an email and will attach the uploaded files to the email it generates, meaning an attacker could upload a payload for outlook and have the script email it to the victim.</p>\n<p><a class=\"button expand\" href=\"https://docs.google.com/spreadsheets/d/1zTfpdEKzquGdk6y7lztnt0E18yZLe_8hH5V1AFN4474/edit?usp=sharing\">View this week&#8217;s vulnerable plugin list.</a></p>\n<h2>Other Security News</h2>\n<p>If you are using <a href=\"https://www.joomla.org/\">Joomla!</a> and are still on version 3.7.3 or earlier, you should strongly consider updating to <a href=\"https://www.joomla.org/announcements/release-news/5710-joomla-3-7-4-release.html\">3.7.4</a> (released earlier this week) as it addresses a <a href=\"https://vuldb.com/?id.104509\">Cross-Site Scripting vulnerability</a> contained in the older versions.</p>\n","comment_status":"open","categories":[{"id":"9321c84b-1d3a-5fe6-8ea5-e74a5f409aad","wordpress_id":58,"count":109,"name":"Plugins","description":"","slug":"plugins"},{"id":"2b3b6db2-5475-53a0-af10-92a53817aa73","wordpress_id":59,"count":114,"name":"Security","description":"","slug":"security"}],"wpc_seo":{"title":"","meta":{"description":"Vulnerable Plugins It was a busy week while I was away.  Twenty disclosures, with eleven issues unfixed.  In concerns to both Formcraft Form Builder, and Ultimate Affiliate Pro, since they...","robots":[]}}},"site":{"siteMetadata":{"siteName":"WPCampus: Where WordPress meets higher education"}}},"pageContext":{"id":"a78dc40f-e485-545e-9494-551b0addc598","wpc_protected":null,"next":{"id":"8e69c727-f391-51f6-9aa1-bb71cd5fc534","wordpress_id":13205,"slug":"vulnerable-plugins-report-july-13-2017","path":"/blog/2017/07/vulnerable-plugins-report-july-13-2017/","title":"Vulnerable WordPress Plugins Report for the Week of July 13, 2017","date":"2017-07-13T17:43:09.000Z","wpc_protected":null},"previous":{"id":"b9569a9b-7832-578c-95c2-4fa41c1693ae","wordpress_id":15000,"slug":"vulnerable-wordpress-plugins-report-august-4-2017","path":"/blog/2017/08/vulnerable-wordpress-plugins-report-august-4-2017/","title":"Vulnerable WordPress Plugins Report for the week of August 4, 2017","date":"2017-08-04T20:49:49.000Z","wpc_protected":null},"crumbs":{"crumb":{"path":"/blog/2017/07/vulnerable-wordpress-plugins-report-july-28-2017/","text":"Vulnerable WordPress Plugins Report for the Week of July 28, 2017"},"parent_element":{"crumb":{"path":"/blog/","text":"Community Blog"}}}}},"staticQueryHashes":["2186475492"]}