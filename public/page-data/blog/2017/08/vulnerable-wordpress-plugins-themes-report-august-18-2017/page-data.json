{"componentChunkName":"component---src-templates-post-js","path":"/blog/2017/08/vulnerable-wordpress-plugins-themes-report-august-18-2017/","result":{"data":{"wordpressPost":{"id":"2a4faac6-dae8-5830-ad44-5dbbc695d803","wordpress_id":15244,"slug":"vulnerable-wordpress-plugins-themes-report-august-18-2017","path":"/blog/2017/08/vulnerable-wordpress-plugins-themes-report-august-18-2017/","author":[{"id":"5be72c28-6949-53f8-b212-3feb5a9983de","path":"gilzow","display_name":"Paul Gilzow","email":"gilzowp@missouri.edu","twitter":"gilzow","website":"http://missouri.edu/","company":"University of Missouri","company_position":"Programmer Analyst","bio":"Web application security and accessibility evangelist. Software instructor. Conference lecturer and presenter."}],"title":"Vulnerable WordPress Plugins/Themes Report for the Week of August 18, 2017","type":"post","status":"publish","date":"2017-08-18T20:22:21.000Z","dateFormatted":"August 18, 2017","excerpt":"<p>Vulnerable Plugins/Themes Eleven disclosures this week, with three issues unfixed. View week's vulnerable plugin list. Going to highlight a couple from this week. The first is the discovery by researcher Lenon...</p>\n","content":"<h2>Vulnerable Plugins/Themes</h2>\n<p>Eleven disclosures this week, with three issues unfixed.</p>\n<p><a class=\"button expand\" href=\"https://docs.google.com/spreadsheets/d/1fAj4UbAXpPn-LC9nlv59f3uw0aPzM-LZEQjExcMhvXc/edit?usp=sharing\">View week&#8217;s vulnerable plugin list.</a></p>\n<p>Going to highlight a couple from this week. The first is the discovery by researcher <a href=\"http://lenonleite.com.br/en/sobre-mim/\">Lenon Leite</a> who discovered a SQL Injection vulnerability in the plugin <a href=\"https://wordpress.org/plugins/link-library/\">Link Library</a>.  Just like with last week&#8217;s SQL Injection examples, this vulnerability requires an authenticated user with permissions to access the plugin’s settings in order to execute the exploit. As before, in most situations this will be someone with an administrator account who, if were a bad actor, could cause more damage in other ways.  But it once again highlights that we need to make sure people are given the minimum amount of privileges to perform their jobs, and as developers, ensure that we are parameterizing/binding <strong>all</strong> queries.</p>\n<p>The second one I want to highlight was discovered by researcher <a href=\"https://twitter.com/padannewitz\">Paul Dannewitz</a>, who discovered a SQL Injection vulnerability in the plugin <a href=\"https://wordpress.org/plugins/i-recommend-this/\">I Recommend This</a>. I Recommend This has over 40K active installs, and only requires a user to have a subscriber-level role. What&#8217;s particularly interesting about this exploit is that vulnerability is in the handling of data passed in via a shortcode. It&#8217;s an excellent example how as a developer, you can&#8217;t trust data from <em>any</em> source.</p>\n<h2>Other Security News</h2>\n<p>Drupal released an <a href=\"https://www.drupal.org/SA-CORE-2017-004\">update</a> yesterday that addressed one critical vulnerability and two moderately critical vulnerabilities in the 8.X branch, and an <a href=\"https://www.drupal.org/node/2902604\">update</a> to the Views module for sites on the 7.X branch.</p>\n<p><a href=\"https://www.alertlogic.com/\">Alert Logic</a> released their <a href=\"https://www.alertlogic.com/assets/industry-reports/alertlogic-cloud-security-report-2017.pdf\">2017 Cloud Security Report</a> earlier this week. During an 18 month period, they tracked over 2 million security incidents, from 3800 customers.  While ransomware has certainly been making the headlines, it was web application attacks that made up almost 75% of those tracked incidents with SQL Injection attacks making up just over half, leading Alert Logic to state:</p>\n<blockquote><p>Web applications are the soft underbelly of your organization – the number-one means by which attackers breach data.</p></blockquote>\n<p>Many of the web applications attacks targeted third-party components (i.e. plugins and themes) which, as developers, is on us.  If you are creating custom plugins or themes, <strong>please</strong> set aside some time to go through some secure coding tutorials.  If you&#8217;ll be attending <a href=\"https://2017.highedweb.org\">HighEdWeb</a> this year (and I highly recommend it) come take my security-focused <a href=\"https://2017.highedweb.org/schedule/\">pre-conference workshop</a>.  Check out the <a href=\"https://www.owasp.org/index.php/OWASP_Secure_Coding_Practices_-_Quick_Reference_Guide\">OWASP Secure Coding Practices quick reference guide</a>, or look into some tutorials over at <a href=\"https://www.lynda.com/Programming-Foundations-tutorials/Introduction-secure-coding/418266/450307-4.html\">lynda.com</a>. It&#8217;s up to us to step up our game and help secure the web.</p>\n<p>Speaking of ransomware, <a href=\"https://wordfence.com/\">Wordfence</a> put out <a href=\"https://www.wordfence.com/blog/2017/08/ransomware-wordpress/\">an interesting post</a> about a new ransomeware that&#8217;s targeting WordPress specifically.  From reading the article, it appears that after compromising the site (WordFence fails to say how the sites are initially compromised), the site is then encrypted and held ransom until the owner pays the ransom.  The best way to protect yourself is the same as always: keep WordPress core, your plugins and your themes up-to-date, be skeptical of any third-party code you add to your site, and lock as many things down as possible.</p>\n<p><a href=\"https://sucuri.net/\">Sucuri</a> did a f<a href=\"https://blog.sucuri.net/2017/08/how-to-restore-website-backups-from-the-command-line.html\">ollow-up post</a> to their post last week on backing up your site using command-line tools: <em><a href=\"https://blog.sucuri.net/2017/08/how-to-restore-website-backups-from-the-command-line.html\">How to Restore Website Backups from the Command Line</a></em>. If you liked last week&#8217;s post, definitely check out this one.</p>\n<p>Last, <a href=\"https://sucuri.net/\">Sucuri</a> also did a post earlier this week on <a href=\"https://blog.sucuri.net/2017/08/malware-decoding-step-step-guide.html\">deconstructing a piece of malware</a>. If you enjoy looking into how malware is constructed and obfuscated, their post is well worth the read.</p>\n","comment_status":"open","categories":[{"id":"9321c84b-1d3a-5fe6-8ea5-e74a5f409aad","wordpress_id":58,"count":109,"name":"Plugins","description":"","slug":"plugins"},{"id":"2b3b6db2-5475-53a0-af10-92a53817aa73","wordpress_id":59,"count":114,"name":"Security","description":"","slug":"security"}],"wpc_seo":{"title":"","meta":{"description":"Vulnerable Plugins/Themes Eleven disclosures this week, with three issues unfixed. View week&#8217;s vulnerable plugin list. Going to highlight a couple from this week. The first is the discovery by researcher Lenon...","robots":[]}}},"site":{"siteMetadata":{"siteName":"WPCampus: Where WordPress meets higher education"}}},"pageContext":{"id":"2a4faac6-dae8-5830-ad44-5dbbc695d803","wpc_protected":null,"next":{"id":"8a520a31-fbd8-5ddd-88c3-531ca9fa1a5d","wordpress_id":15122,"slug":"vulnerable-wordpress-plugins-themes-report-august-11-2017","path":"/blog/2017/08/vulnerable-wordpress-plugins-themes-report-august-11-2017/","title":"Vulnerable WordPress Plugins/Themes Report for the Week of August 11, 2017","date":"2017-08-11T19:49:05.000Z","wpc_protected":null},"previous":{"id":"30e7a8b0-8a74-5779-9b85-5a08ceb6c246","wordpress_id":15346,"slug":"vulnerable-wordpress-plugins-themes-report-august-25-2017","path":"/blog/2017/08/vulnerable-wordpress-plugins-themes-report-august-25-2017/","title":"Vulnerable WordPress Plugins/Themes Report for the Week of August 25, 2017","date":"2017-08-25T20:30:46.000Z","wpc_protected":null},"crumbs":{"crumb":{"path":"/blog/2017/08/vulnerable-wordpress-plugins-themes-report-august-18-2017/","text":"Vulnerable WordPress Plugins/Themes Report for the Week of August 18, 2017"},"parent_element":{"crumb":{"path":"/blog/","text":"Community Blog"}}}}},"staticQueryHashes":["2186475492"]}