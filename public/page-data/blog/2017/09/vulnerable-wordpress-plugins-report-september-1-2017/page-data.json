{"componentChunkName":"component---src-templates-post-js","path":"/blog/2017/09/vulnerable-wordpress-plugins-report-september-1-2017/","result":{"data":{"wordpressPost":{"id":"48f9afcb-f711-5ede-8556-98195f39ed8f","wordpress_id":15482,"slug":"vulnerable-wordpress-plugins-report-september-1-2017","path":"/blog/2017/09/vulnerable-wordpress-plugins-report-september-1-2017/","author":[{"id":"5be72c28-6949-53f8-b212-3feb5a9983de","path":"gilzow","display_name":"Paul Gilzow","email":"gilzowp@missouri.edu","twitter":"gilzow","website":"http://missouri.edu/","company":"University of Missouri","company_position":"Programmer Analyst","bio":"Web application security and accessibility evangelist. Software instructor. Conference lecturer and presenter."}],"title":"Vulnerable WordPress Plugins Report for the Week of September 1, 2017","type":"post","status":"publish","date":"2017-09-01T19:56:53.000Z","dateFormatted":"September 1, 2017","excerpt":"<p>Vulnerable Plugins Ten disclosures this week, with three issues unfixed. View this week's vulnerable plugin list. The disclosure with the most visibility this week was in WooCommerce Product Vendors, where...</p>\n","content":"<h2>Vulnerable Plugins</h2>\n<p>Ten disclosures this week, with three issues unfixed.</p>\n<p><a class=\"button expand\" href=\"https://docs.google.com/spreadsheets/d/1AorLoXEiZ4kMPUjA5SSUZl04BsJbZIfiQrHD3d-yS9g/edit?usp=sharing\">View this week&#8217;s vulnerable plugin list.</a></p>\n<p>The disclosure with the <a href=\"https://threatpost.com/reflected-xss-bug-patched-in-popular-woocommerce-wordpress-plugin/127744/\">most</a> <a href=\"https://www.wordfence.com/blog/2017/08/xss-vulnerability-woocommerce-product-vendors-plugin/\">visibility</a> <a href=\"https://wpdistrict.sitelock.com/blog/threat-intercept-sitelock-discovers-xss-vulnerability-in-woocommerce-extension/\">this week</a> was in <a href=\"https://woocommerce.com/products/product-vendors/\">WooCommerce Product Vendors</a>, where researchers from SiteLock discovered an unauthenticated, reflected Cross-Site Scripting vulnerability.  <a href=\"https://automattic.com/\">Automattic</a> was quick to patch the vulnerability and promptly released version 2.0.40. Also disclosed this week were <a href=\"https://www.owasp.org/index.php/PHP_Object_Injection\">PHP Object Injection</a> vulnerabilities in the plugins <a href=\"https://wordpress.org/plugins/jayj-quicktag/\">JayJ Quicktag,</a> <a href=\"https://wordpress.org/plugins/videowhisper-live-streaming-integration/\">VideoWhisper Live Streaming</a> and <a href=\"https://wordpress.org/plugins/wp-smart-security/\">WP Smart Security</a> (currently unfixed).  All three were discovered by researchers at <a href=\"https://www.pluginvulnerabilities.com/\">pluginvulnerabilities.com</a>. For the WP Smart Security vulnerability, they utilized the <a href=\"http://php-grinder.com/\">php-grinder.com</a> service. PHP-Grinder is a <a href=\"https://www.owasp.org/index.php/Static_Code_Analysis#Description\">static analysis</a> tool designed specially to scan WordPress plugins and PHP-based GitHub projects for potential security vulnerabilities.   If you&#8217;re new to static analysis, this is a great introduction to see how static analysis works.  In looking at the <a href=\"http://php-grinder.com/project/view/21868\">report</a> for WP Smart Security, we can see it <a href=\"http://php-grinder.com/vulns/view/3903988\">identified</a> a potentially insecure use of <a href=\"http://php.net/manual/en/function.unserialize.php\">unserialize</a> on line 20 of secure.php.  Looking at the source we find unserialize is being called on the contents of $HTTP_RAW_POST_DATA after being base64 decoded, which is definitely of concern.</p>\n<p>I was fortunate to use the initial 0.1 beta of php-grinder.com and have been extremely happy with the 0.2 version.  I would encourage you to test out your own plugins/projects for issues. If you decide to test any plugins that you use, and you do find a vulnerability, please be sure to communicate <em>immediately</em> with the author. If they are unresponsive, report the vulnerability to <a href=\"mailto:plugins@wordpress.org\">plugins@wordpress.org</a> following their <a href=\"https://developer.wordpress.org/plugins/wordpress-org/plugin-security/reporting-plugin-security-issues/\">guidelines</a>.</p>\n<h2>Security PSAs</h2>\n<p>If you haven&#8217;t already implemented ssl on your site, you&#8217;re most likely going to be flagged as &#8220;Not Secure&#8221; in Chrome starting in October.  Starting with Chrome version 62 (slated for an October 24th release), pages that contain an input element that are not served over https will be marked as &#8220;Not Secure&#8221;, and for all non-https pages when Chrome is in incognito mode, according to an email from Google sent to site owners earlier this month.Google has been using https as a light search ranking signal for several years; this is simply the next step in <a href=\"https://blog.chromium.org/2017/04/next-steps-toward-more-connection.html?utm_source=wnc_10038795&amp;utm_medium=gamma&amp;utm_campaign=wnc_10038795&amp;utm_content=msg_100078324&amp;hl=en\">Google&#8217;s effort to increase SSL adoption</a> across the web.</p>\n<p><img class=\"size-full wp-image-15483 aligncenter\" src=\"https://dev5290.wpcampus.org/wp-content/uploads/Screen-Shot-2017-09-01-at-1.56.38-PM.png\" alt=\"google says add ssl to your site or it will be marked as not secure\" width=\"620\" height=\"490\" /></p>\n<p>While I applaud their attempt to motivate site owners to secure communications between the web server and the end-user, I fear this step, while well intentioned  will makes things worse.  Unfortunately, many people have come to associate the lock+&#8221;Secure&#8221; in the browser to mean the site they are visiting is &#8220;safe&#8221;.  And while the connection between the server and the browser will be &#8220;safe&#8221;, it doesn&#8217;t help the end user if the server/site on the other end is compromised, or actively trying to exploit the user.  In addition, given Let&#8217;s Encrypt&#8217;s less than stellar record in <a href=\"https://nakedsecurity.sophos.com/2017/03/30/lets-encrypt-issues-certs-to-paypal-phishing-sites-how-to-protect-yourself/\">issuing certs to phishing domains</a>, and that their certs are only domain validation certificates, not identity verification certificates, we end up with a precarious situation.  Do you think the average user will know the website on the right is a phishing site?</p><figure style=\"width: 848px\" class=\"wp-caption aligncenter\"><a href=\"https://scotthelme.co.uk\"><img src=\"https://scotthelme.co.uk/content/images/2017/02/image46.png\" alt=\"Identity vs domain validation. \" width=\"848\" height=\"380\" /></a><figcaption class=\"wp-caption-text\">Credit Scott Helme</figcaption></figure><p>In either case, if your site is not currently being served over https, and it contains any input elements (like a search field) just know that starting at the end of October, you&#8217;ll probably start receiving communications from users concerned that your site has been compromised.</p>\n<p>Second, Proofpoint recently <a href=\"https://www.proofpoint.com/us/threat-insight/post/defray-new-ransomware-targeting-education-and-healthcare-verticals\">revealed</a> they&#8217;ve been tracking a ransomware strained they&#8217;ve dubbed Defray that is targeting the Healthcare and Education industries in the US and UK. Distribution is typically via email with a Word document attachment. The Word document has what is supposed to look like an embedded YouTube video, but is actually an embedded executable.   As always, be skeptical of any emails you receive unexpectedly that contain attachments.</p>\n","comment_status":"open","categories":[{"id":"9321c84b-1d3a-5fe6-8ea5-e74a5f409aad","wordpress_id":58,"count":109,"name":"Plugins","description":"","slug":"plugins"},{"id":"2b3b6db2-5475-53a0-af10-92a53817aa73","wordpress_id":59,"count":114,"name":"Security","description":"","slug":"security"}],"wpc_seo":{"title":"","meta":{"description":"Vulnerable Plugins Ten disclosures this week, with three issues unfixed. View this week&#8217;s vulnerable plugin list. The disclosure with the most visibility this week was in WooCommerce Product Vendors, where...","robots":[]}}},"site":{"siteMetadata":{"siteName":"WPCampus: Where WordPress meets higher education"}}},"pageContext":{"id":"48f9afcb-f711-5ede-8556-98195f39ed8f","wpc_protected":null,"next":{"id":"30e7a8b0-8a74-5779-9b85-5a08ceb6c246","wordpress_id":15346,"slug":"vulnerable-wordpress-plugins-themes-report-august-25-2017","path":"/blog/2017/08/vulnerable-wordpress-plugins-themes-report-august-25-2017/","title":"Vulnerable WordPress Plugins/Themes Report for the Week of August 25, 2017","date":"2017-08-25T20:30:46.000Z","wpc_protected":null},"previous":{"id":"11bdc14d-5f4f-5743-87a8-f55bb4efa51d","wordpress_id":15491,"slug":"vulnerable-wordpress-plugins-report-september-8-2017","path":"/blog/2017/09/vulnerable-wordpress-plugins-report-september-8-2017/","title":"Vulnerable WordPress Plugins Report for the Week of September 8, 2017","date":"2017-09-08T20:13:40.000Z","wpc_protected":null},"crumbs":{"crumb":{"path":"/blog/2017/09/vulnerable-wordpress-plugins-report-september-1-2017/","text":"Vulnerable WordPress Plugins Report for the Week of September 1, 2017"},"parent_element":{"crumb":{"path":"/blog/","text":"Community Blog"}}}}},"staticQueryHashes":["2186475492"]}