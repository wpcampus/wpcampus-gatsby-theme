{"componentChunkName":"component---src-templates-post-js","path":"/blog/2017/09/vulnerable-wordpress-plugins-report-week-september-22-2017/","result":{"data":{"wordpressPost":{"id":"c3d9a697-2190-5979-801d-3f9d4f0ca34a","wordpress_id":15812,"slug":"vulnerable-wordpress-plugins-report-week-september-22-2017","path":"/blog/2017/09/vulnerable-wordpress-plugins-report-week-september-22-2017/","author":[{"id":"5be72c28-6949-53f8-b212-3feb5a9983de","path":"gilzow","display_name":"Paul Gilzow","email":"gilzowp@missouri.edu","twitter":"gilzow","website":"http://missouri.edu/","company":"University of Missouri","company_position":"Programmer Analyst","bio":"Web application security and accessibility evangelist. Software instructor. Conference lecturer and presenter."}],"title":"Vulnerable WordPress Plugins Report for the Week of September 22, 2017","type":"post","status":"publish","date":"2017-09-22T20:00:14.000Z","dateFormatted":"September 22, 2017","excerpt":"<p>Vulnerable Plugins Fourteen disclosures this week, with five issues unfixed, and one that is critical. View this week's vulnerable plugins list. The critical disclosure this week is an Arbitrary File...</p>\n","content":"<h2>Vulnerable Plugins</h2>\n<p>Fourteen disclosures this week, with five issues unfixed, and one that is critical.</p>\n<p><a class=\"button expand\" href=\"https://docs.google.com/spreadsheets/d/1NkX8BIOJ6s7r49XLkxV4n3xtpe6QWPyyn1BVWC_WR7E/edit?usp=sharing\">View this week&#8217;s vulnerable plugins list.</a></p>\n<p>The critical disclosure this week is an Arbitrary File Upload vulnerability in the plugin <a href=\"https://wordpress.org/plugins/allpost-contactform/\">All Post Contact Form</a>.  It appears that the plugin <a href=\"https://plugins.trac.wordpress.org/browser/allpost-contactform/trunk/allpost-contactform-core.php#L68\">doesn&#8217;t do any checking on the file type</a> that is being uploaded and saves it to the uploads directory. This means an attacker could upload a backdoor script to your site and then access it in your site&#8217;s /wp-content/uploads/ directory.  If you remember back to my <a href=\"https://www.slideshare.net/gilzow/access-denied-75716045\"><em>Access Denied</em> presentation</a>, this scenario is precisely why I suggest denying access to all file types in the uploads directory except for those you specifically want the public to have access to.  It is highly recommended that you remove this plugin immediately.</p>\n<p>While not in the report this week, I came across a <a href=\"http://whatis.techtarget.com/definition/Google-dork-query\">google dork</a> <a href=\"https://www.exploit-db.com/ghdb/4544/\">entry</a> in exploit-db.com that targets the .user.ini file generated by  the WordFence plugin.  The .user.ini file contains a full path listing to the wordfence-waf.php file.  By default, the plugin should include an entry in the site&#8217;s .htaccess file to deny access to this file.  In addition, it should warn nginx user&#8217;s to include an entry in their configuration file.  However, it doesn&#8217;t appear that the plugin verifies an .htaccess file is actually in use, or that the nginx configuration has been made.  IIS users are simply out-of-luck with no warning or instructions on how to deny access to the file.  A quick <a href=\"https://www.google.com/search?q=filetype%3Aini+%22wordfence%22&amp;oq=filetype%3Aini+%22wordfence%22&amp;aqs=chrome..69i57j69i58j69i61&amp;sourceid=chrome&amp;ie=UTF-8\">search</a> shows that there are quite a few sites out there using Wordfence with no protection against disclosing this information.   Now, the disclosure of the full path <em>by itself</em> won&#8217;t compromise your site. However, this information can be used in combination with other attacks that require knowing the server path.  Regardless, if you use Wordfence, I would suggest checking your site to see if you can access the .user.ini file.  If so, make sure to add the configuration changes needed in order to block it from public access. If you run into issues figuring out how to do so, reach out to me and I&#8217;ll assist.</p>\n<h2>WordPress Security News</h2>\n<p>In other WordPress security news, version 4.8.2 was <a href=\"https://wordpress.org/news/2017/09/wordpress-4-8-2-security-and-maintenance-release/\">released</a> earlier this week.  4.8.2 <a href=\"https://codex.wordpress.org/Version_4.8.2\">addresses</a> nine security issues, and six maintenance issues.  Hopefully you have auto-updates enabled and have already received the update, but if not, you should update as soon as feasibly possible.</p>\n<h2>Other Security New</h2>\n<p>In other security news that might affect you, a new Apache vulnerability dubbed OptionsBleed was <a href=\"https://blog.fuzzing-project.org/60-Optionsbleed-HTTP-OPTIONS-method-can-leak-Apaches-server-memory.html\">disclosed</a> this week that affects versions of Apache 2.2.34 and earlier, and version 2.4.27 and earlier. Apache has <a href=\"https://svn.apache.org/viewvc/httpd/httpd/branches/2.4.x/server/core.c?r1=1805223&amp;r2=1807754&amp;pathrev=1807754&amp;view=patch\">released a patch</a> to fix the issue.  Without getting too technical, if a misconfiguration has occurred in a user&#8217;s web account, a malicious actor can send a request to the server, and due to the misconfiguration, Apache will leak contents from memory.  Since the misconfiguration can occur in the user&#8217;s account, a malicious actor could intentionally cause the misconfiguration in a shared hosting environment.  NakedSecurity has a <a href=\"https://nakedsecurity.sophos.com/2017/09/19/apache-optionsbleed-vulnerability-what-you-need-to-know/\">great write-up</a> if you&#8217;re interested in the technical specifics.  If you are on shared hosting, I would suggest talking to your host and make sure they have patched their systems.</p>\n<p>Next up, many of us use slack as a way to collaborate among workers, friends and community members.  Most often, those slack teams are meant only for people who should have access.  Researcher Inti De Ceukelaire recently <a href=\"https://medium.freecodecamp.org/how-i-hacked-hundreds-of-companies-through-their-helpdesk-b7680ddc2d4c\">discovered</a> a way to bypass that gateway and gain access to many companies&#8217; internal communications by using their online ticket systems, or online help desk systems.  By using a company&#8217;s support email (e.g. support@company.com), he was then able to sign into a company&#8217;s slack channel.  He&#8217;s dubbed the bypass TicketTrick and unfortunately, the same issue affects Yammer and Facebook Workplace. As for remediation, one option is to make your team invite-only instead of basing it on company email. The other is to consider using different domain names for their email issue trackers and support help desks.</p>\n<p>&nbsp;</p>\n","comment_status":"open","categories":[{"id":"9321c84b-1d3a-5fe6-8ea5-e74a5f409aad","wordpress_id":58,"count":109,"name":"Plugins","description":"","slug":"plugins"},{"id":"2b3b6db2-5475-53a0-af10-92a53817aa73","wordpress_id":59,"count":114,"name":"Security","description":"","slug":"security"}],"wpc_seo":{"title":"","meta":{"description":"Vulnerable Plugins Fourteen disclosures this week, with five issues unfixed, and one that is critical. View this week&#8217;s vulnerable plugins list. The critical disclosure this week is an Arbitrary File...","robots":[]}}},"site":{"siteMetadata":{"siteName":"WPCampus: Where WordPress meets higher education"}}},"pageContext":{"id":"c3d9a697-2190-5979-801d-3f9d4f0ca34a","wpc_protected":null,"next":{"id":"5725b910-6d1b-57d9-890e-1984b5d34433","wordpress_id":15740,"slug":"vulnerable-wordpress-plugins-report-week-september-15-2017","path":"/blog/2017/09/vulnerable-wordpress-plugins-report-week-september-15-2017/","title":"Vulnerable WordPress Plugins Report for the Week of September 15, 2017","date":"2017-09-15T20:53:29.000Z","wpc_protected":null},"previous":{"id":"24b71c8c-7e83-563b-b4b9-4b4760844d25","wordpress_id":15940,"slug":"vulnerable-wordpress-plugins-report-week-september-29-2017","path":"/blog/2017/09/vulnerable-wordpress-plugins-report-week-september-29-2017/","title":"Vulnerable WordPress Plugins Report for the Week of September 29, 2017","date":"2017-09-29T21:32:50.000Z","wpc_protected":null},"crumbs":{"crumb":{"path":"/blog/2017/09/vulnerable-wordpress-plugins-report-week-september-22-2017/","text":"Vulnerable WordPress Plugins Report for the Week of September 22, 2017"},"parent_element":{"crumb":{"path":"/blog/","text":"Community Blog"}}}}},"staticQueryHashes":["2186475492"]}