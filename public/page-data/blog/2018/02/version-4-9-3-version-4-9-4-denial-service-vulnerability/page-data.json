{"componentChunkName":"component---src-templates-post-js","path":"/blog/2018/02/version-4-9-3-version-4-9-4-denial-service-vulnerability/","result":{"data":{"wordpressPost":{"id":"6fe066cb-b8db-5230-b14b-b6435c0416a7","wordpress_id":18050,"slug":"version-4-9-3-version-4-9-4-denial-service-vulnerability","path":"/blog/2018/02/version-4-9-3-version-4-9-4-denial-service-vulnerability/","author":[{"id":"5be72c28-6949-53f8-b212-3feb5a9983de","path":"gilzow","display_name":"Paul Gilzow","email":"gilzowp@missouri.edu","twitter":"gilzow","website":"http://missouri.edu/","company":"University of Missouri","company_position":"Programmer Analyst","bio":"Web application security and accessibility evangelist. Software instructor. Conference lecturer and presenter."}],"title":"Version 4.9.3, Version 4.9.4 and the Denial of Service Vulnerability","type":"post","status":"publish","date":"2018-02-07T16:28:44.000Z","dateFormatted":"February 7, 2018","excerpt":"<p>As I mentioned on Friday, WordPress version 4.9.3 was released as scheduled Monday mid-day. If you have auto-updates enabled, you might have been surprised to see another WordPress update (4.9.4) come through...</p>\n","content":"<p>As I <a href=\"https://dev5290.wpcampus.org/2018/02/vulnerable-wordpress-plugins-report-week-february-2-2018/\">mentioned on Friday</a>, WordPress version 4.9.3 was released as scheduled Monday mid-day. If you have auto-updates enabled, you might have been surprised to see <a href=\"https://wordpress.org/news/2018/02/wordpress-4-9-4-maintenance-release/\">another WordPress update (4.9.4)</a> come through Tuesday morning around 10am (CST). It seems there was a severe bug in 4.9.3 that caused the auto update feature to break in some sites and will require manual intervention to upgrade to 4.9.4. If you have auto-updates enabled and you did <em><strong>not</strong></em> see a notification of the update Tuesday morning, you will need to manually update to WordPress 4.9.4. Doing so will correct the issue and allow the auto-update feature to work for the next release.</p>\n<p>Separately, a denial-of-service vulnerability was <a href=\"https://baraktawily.blogspot.fr/2018/02/how-to-dos-29-of-world-wide-websites.html\">disclosed yesterday</a> that takes advantage of a default feature in WordPress to overwhelm the server targeting the load-scripts.php and load-styles.php files. Those two files will load up all requested scripts/styles and dynamically concatenate them into one file. The vulnerability comes into play when a request is given to them to load every possible script/style. There are 181 scripts included in core. Instructing the script to read and concatenate that many files into one file, for most hosts, will overwhelm the resources and cause the server to return 500 errors. According to the researcher, the WordPress security team didn’t consider it a core vulnerability and believe it should be handled at the server/host layer. The probability of someone legitimately enqueueing that many scripts/styles is probably fairly low, certainly lower than the probability of someone abusing this feature to cause issues. It should be entirely possible for core to limit the number of files being concatenated to X amount, with the ability to increase the number if problems are encountered.</p>\n<p>In response, the researcher has <a href=\"https://github.com/quitten/wordpress\">forked WordPress</a> with his fixes and has also provided a <a href=\"https://github.com/Quitten/WordPress/blob/master/wp-dos-patch.sh\">patch</a>, but I would <strong>not</strong> suggest using a forked version of WordPress. While the patch is straight-forward, it will require being reapplied after every update (so twice this week). Instead, I would suggest adding a couple of lines to your htaccess file to watch for requests to these file, and block them if the length of the load list is too long.</p>\n<pre>RewriteCond %{REQUEST_URI} ^/wp-admin/load-(scripts|styles)\\.php$\r\nRewriteCond %{QUERY_STRING} load(?:\\[\\])?=(.{256,})$\r\nRewriteRule ^(.*)$ - [F,L]\r\n</pre>\n<p>In the full list of scripts, there are 2650 characters. In the above htaccess example, I’ve set it so if there are more than 256 characters forbid the request. You may need to adjust that number upwards if you find your loaded scripts list is longer.</p>\n<p>If anyone is experienced in nginx conf files and can translate the above to nginx equivalent, <a href=\"https://twitter.com/gilzow\">reach out to me</a>, and I&#8217;ll post it here.</p>\n<p>UPDATE: small update to the regex. Hat tip to <a href=\"https://twitter.com/mausmalone\">Matt Pierce</a> for catching the oversight.</p>\n","comment_status":"open","categories":[{"id":"2b3b6db2-5475-53a0-af10-92a53817aa73","wordpress_id":59,"count":114,"name":"Security","description":"","slug":"security"}],"wpc_seo":{"title":"","meta":{"description":"As I mentioned on Friday, WordPress version 4.9.3 was released as scheduled Monday mid-day. If you have auto-updates enabled, you might have been surprised to see another WordPress update (4.9.4) come through...","robots":[]}}},"site":{"siteMetadata":{"siteName":"WPCampus: Where WordPress meets higher education"}}},"pageContext":{"id":"6fe066cb-b8db-5230-b14b-b6435c0416a7","wpc_protected":null,"next":{"id":"f5d33cc8-e887-5c2a-877d-13a53e019567","wordpress_id":18015,"slug":"vulnerable-wordpress-plugins-report-week-february-2-2018","path":"/blog/2018/02/vulnerable-wordpress-plugins-report-week-february-2-2018/","title":"Vulnerable WordPress Plugins Report for the Week of February 2, 2018","date":"2018-02-02T21:13:55.000Z","wpc_protected":null},"previous":{"id":"d3fad107-8815-536c-9f1d-7d021fc0244b","wordpress_id":18618,"slug":"vulnerable-wordpress-plugins-report-weeks-february-9-2018-february-16-2018","path":"/blog/2018/02/vulnerable-wordpress-plugins-report-weeks-february-9-2018-february-16-2018/","title":"Vulnerable WordPress Plugins Report for the Weeks of February 9, 2018 and February 16, 2018","date":"2018-02-16T21:46:03.000Z","wpc_protected":null},"crumbs":{"crumb":{"path":"/blog/2018/02/version-4-9-3-version-4-9-4-denial-service-vulnerability/","text":"Version 4.9.3, Version 4.9.4 and the Denial of Service Vulnerability"},"parent_element":{"crumb":{"path":"/blog/","text":"Community Blog"}}}}},"staticQueryHashes":["2186475492"]}